# docker/config/kafka/kafka_config.properties

# Broker Configuration
bootstrap.servers=localhost:9092,kafka:29092  # Updated to support both local and Docker access
client.id=weather-app-client
advertised.listeners=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
inter.broker.listener.name=PLAINTEXT

# Topic Configuration
weather.topic.name=weather_data
alerts.topic.name=weather_alerts

# Producer Configuration
producer.acks=all
producer.retries=2147483647
producer.max.in.flight.requests.per.connection=5
producer.enable.idempotence=true
producer.compression.type=snappy
producer.linger.ms=20
producer.batch.size=32768

# Consumer Configuration
consumer.group.id=weather-consumer-group
consumer.auto.offset.reset=earliest
consumer.enable.auto.commit=true
consumer.auto.commit.interval.ms=5000
consumer.session.timeout.ms=30000
consumer.heartbeat.interval.ms=10000
consumer.max.poll.records=500
consumer.fetch.min.bytes=50000
consumer.fetch.max.wait.ms=500

# Serialization
producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
consumer.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Security Configuration (if needed)
security.protocol=PLAINTEXT

# Schema Registry (if using)
# schema.registry.url=http://schema-registry:8081

# Monitoring
# jmx.port=9999
# metrics.reporters=
# metric.reporters=

# Cleanup and Retention
log.retention.hours=168
log.retention.bytes=1073741824
log.segment.bytes=1073741824
log.cleanup.policy=delete

# Weather Data Topic Specific Settings
weather.topic.partitions=3
weather.topic.replication.factor=1
weather.topic.retention.ms=604800000

# Alerts Topic Specific Settings
alerts.topic.partitions=2
alerts.topic.replication.factor=1
alerts.topic.retention.ms=2592000000